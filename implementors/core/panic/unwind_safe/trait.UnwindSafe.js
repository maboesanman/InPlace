(function() {var implementors = {};
implementors["in_place"] = [{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/hash_map/struct.DummyHashMap.html\" title=\"struct in_place::dummy_collections::hash_map::DummyHashMap\">DummyHashMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["in_place::internal::dummy_collections::hash_map::DummyHashMap"]},{"text":"impl&lt;'c, K, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/hash_map/struct.DummyHashMapOccupiedEntry.html\" title=\"struct in_place::dummy_collections::hash_map::DummyHashMapOccupiedEntry\">DummyHashMapOccupiedEntry</a>&lt;'c, K, V&gt;","synthetic":true,"types":["in_place::internal::dummy_collections::hash_map::DummyHashMapOccupiedEntry"]},{"text":"impl&lt;'c, K, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/hash_map/struct.DummyHashMapVacantEntry.html\" title=\"struct in_place::dummy_collections::hash_map::DummyHashMapVacantEntry\">DummyHashMapVacantEntry</a>&lt;'c, K, V&gt;","synthetic":true,"types":["in_place::internal::dummy_collections::hash_map::DummyHashMapVacantEntry"]},{"text":"impl&lt;'c, K, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/hash_map/struct.DummyHashMapRawVacantEntry.html\" title=\"struct in_place::dummy_collections::hash_map::DummyHashMapRawVacantEntry\">DummyHashMapRawVacantEntry</a>&lt;'c, K, V&gt;","synthetic":true,"types":["in_place::internal::dummy_collections::hash_map::DummyHashMapRawVacantEntry"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/b_tree_map/struct.DummyBTreeMap.html\" title=\"struct in_place::dummy_collections::b_tree_map::DummyBTreeMap\">DummyBTreeMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["in_place::internal::dummy_collections::b_tree_map::DummyBTreeMap"]},{"text":"impl&lt;'c, K, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/b_tree_map/struct.DummyBTreeMapOccupiedEntry.html\" title=\"struct in_place::dummy_collections::b_tree_map::DummyBTreeMapOccupiedEntry\">DummyBTreeMapOccupiedEntry</a>&lt;'c, K, V&gt;","synthetic":true,"types":["in_place::internal::dummy_collections::b_tree_map::DummyBTreeMapOccupiedEntry"]},{"text":"impl&lt;'c, K, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/b_tree_map/struct.DummyBTreeMapVacantEntry.html\" title=\"struct in_place::dummy_collections::b_tree_map::DummyBTreeMapVacantEntry\">DummyBTreeMapVacantEntry</a>&lt;'c, K, V&gt;","synthetic":true,"types":["in_place::internal::dummy_collections::b_tree_map::DummyBTreeMapVacantEntry"]},{"text":"impl&lt;'c, K, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/dummy_collections/b_tree_map/struct.DummyBTreeMapRawVacantEntry.html\" title=\"struct in_place::dummy_collections::b_tree_map::DummyBTreeMapRawVacantEntry\">DummyBTreeMapRawVacantEntry</a>&lt;'c, K, V&gt;","synthetic":true,"types":["in_place::internal::dummy_collections::b_tree_map::DummyBTreeMapRawVacantEntry"]},{"text":"impl&lt;Occ, Vac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"in_place/entry/enum.Entry.html\" title=\"enum in_place::entry::Entry\">Entry</a>&lt;Occ, Vac&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Occ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vac: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["in_place::internal::entry::Entry"]},{"text":"impl&lt;Occ, Vac, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"in_place/entry/enum.EntryWithSearchKey.html\" title=\"enum in_place::entry::EntryWithSearchKey\">EntryWithSearchKey</a>&lt;Occ, Vac, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Occ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vac: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["in_place::internal::entry::EntryWithSearchKey"]},{"text":"impl&lt;'c, V&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/implementations/slice/struct.OccupiedMutSliceEntry.html\" title=\"struct in_place::implementations::slice::OccupiedMutSliceEntry\">OccupiedMutSliceEntry</a>&lt;'c, V&gt;","synthetic":true,"types":["in_place::internal::implementations::slice::OccupiedMutSliceEntry"]},{"text":"impl&lt;'c, T, const OCCUPIED:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"in_place/implementations/maybe_uninit/struct.MaybeUninitEntry.html\" title=\"struct in_place::implementations::maybe_uninit::MaybeUninitEntry\">MaybeUninitEntry</a>&lt;'c, T, OCCUPIED&gt;","synthetic":true,"types":["in_place::internal::implementations::maybe_uninit::MaybeUninitEntry"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()